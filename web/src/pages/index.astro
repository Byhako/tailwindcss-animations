---
import Layout from '../layouts/Layout.astro'
import theme from '../../../src/theme.js'

const { animation } = theme
---

<Layout title="Plugin Tailwind animations">
  <main class="relative">
    <header class="max-w-4xl mx-auto flex flex-col items-center py-10 justify-center">
      <h1 class="font-semibold text-4xl pt-10 pb-2">Tailwind css animations</h1>
      <h2 class="font-medium opacity-80 mb-10">The plugin that you need! ðŸ˜‰</h2>
      <div>
        <code>npm install @byhako/tailwindcss-animations</code>
      </div>
    </header>

    <section class="max-w-4xl m-auto grid grid-cols-3 gap-4">
      {
        Object.keys(animation).map(singleAnimation => (
          <article
            class="col-span-1 border-2 border-blue-100 rounded hover:border-cyan-700 transition-all cursor-pointer"
            data-class={singleAnimation}
          >
            <div class="flex p-4 gap-4 items-center justify-center flex-col w-full h-full">
              <span class="w-16 h-16 bg-gray-800 rounded-md flex items-center"></span>
              <h3 class="font-semibold text-xs">{singleAnimation}</h3>
            </div>
          </article>
        ))
      }
    </section>

    <p id='message' class="bg-slate-900 text-slate-400 py-2 px-10 hidden transition-all duration-500 justify-center rounded fixed top-10 left-10">Clase copiada</p>
  </main>
</Layout>

<script type="text/javascript">
  const articles = document.querySelectorAll('article')
  const message = document.getElementById('message')

  articles?.forEach(article => {
    const animationKey = article.getAttribute('data-class')
    const animationClass = `animate-${animationKey}`

    const box = article.querySelector('span')

    article.addEventListener('mouseenter', () => {
      box.classList.add(animationClass)
    })

    article.addEventListener('mouseleave', () => {
      box.classList.remove(animationClass)
    })

    article.addEventListener('click', async () => {
      try {
        await navigator.clipboard.writeText(animationClass)
        message.classList.remove('hidden')
        message.classList.add('flex')

        setTimeout(() => {
          message.classList.remove('flex')
          message.classList.add('hidden')
        }, 2000)
      } catch (err) {
        console.error('Error al copiar: ', err)
      }
    })

  })
</script>